unsigned char gf[16]={0,1,2,4,8,9,11,15,7,14,5,10,13,3,6,12};
unsigned char fg[16]={0,1,2,13,3,10,14,8,4,5,11,6,15,12,9,7};

int mlt(int x, int y){

    if(x==0||y==0)
        return 0;
  
  return ((x+y-2)%(16-1))+1;
}

int rank(int mat[][100], int n, int m){    
    int ltmp[100], tmp, a_tmp[100], b_tmp[100];
    int i, j, k;
    int count;
    int all_zero;

    for(i = 0; i < n; i++){
        all_zero = 0;
        if(mat[i][i] == 0){ 
            for(j = 0; j < m; j++){
                if(mat[j][i] != 0){
                    for(k = 0; k < n; k++){
                        tmp = mat[i][k];
                        mat[i][k] = mat[j][k];
                        mat[j][k] = tmp;
                    }
                } else if(j == n - 1)
                    all_zero = 1;
            }
        }



        if(!all_zero){      
            for(j = i + 1; j < m; j++){
                for(k = 0; k < n; k++){
		  a_tmp[k] = mlt(mat[i][k] , mat[j][i]);
		  b_tmp[k] = mlt(mat[j][k] , mat[i][i]);
                }
                for(k = 0; k < n; k++)
                    mat[j][k] = fg[gf[b_tmp[k]]^gf[a_tmp[k]]];
            }
        }
    }


    count = 0;
    for(i = 0; i < m; i++){
        if(mat[i][n] == 0)
            count++;
    }

    return (n - count);
}


int main(){
  unsigned int m[15][10]={
    {10,0,5,5,0,3,10,10,2,4},
    {0,5,0,10,10,2,0,5,6,10},
    {5,0,3,10,2,4,5,6,10,9},
    {5,10,10,0,5,6,5,0,3,2},
    {0,10,2,5,6,10,0,3,2,13},
    {3,2,4,6,10,9,3,2,13,0},
    {10,0,5,5,0,3,10,10,2,4},
    {10,5,6,0,3,2,10,2,4,10},
    {2,6,10,3,2,13,2,4,10,5},
    {4,10,9,2,13,0,4,10,5,0},
    {0,5,0,10,10,2,0,5,6,10},
    {5,0,3,10,2,4,5,6,10,9},
    {6,3,2,2,4,10,6,10,9,10},
    {10,2,13,4,10,5,10,9,10,10},
    {9,13,0,10,5,0,9,10,10,2}
  };

  printf("%d\n",rank(m,10,10));
}
